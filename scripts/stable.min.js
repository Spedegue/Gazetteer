let activeCountry={},userCoords={},boundingBox;const countryList=[],countryCodes=[];let myLines,earthquakes;const weatherUrl="https://tile.openweathermap.org/map/{layer}/{z}/{x}/{y}.png?appid=3f47e7abc196db007ccb9df586b8592a",dark=L.tileLayer("https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>',subdomains:"abcd",maxZoom:19}),satellite=L.tileLayer("https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",{minZoom:1,attribution:"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community"}),light=L.tileLayer("https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png",{minZoom:1,maxZoom:14,attribution:'&copy; <a href="https://stadiamaps.com/">Stadia Maps</a>, &copy; <a href="https://openmaptiles.org/">OpenMapTiles</a> &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors'}),earthAtNight=L.tileLayer("https://map1.vis.earthdata.nasa.gov/wmts-webmerc/VIIRS_CityLights_2012/default/{time}/{tilematrixset}{maxZoom}/{z}/{y}/{x}.{format}",{attribution:'Imagery provided by services from the Global Imagery Browse Services (GIBS), operated by the NASA/GSFC/Earth Science Data and Information System (<a href="https://earthdata.nasa.gov">ESDIS</a>) with funding provided by NASA/HQ.',maxZoom:8,minZoom:2,format:"jpg",time:"",tilematrixset:"GoogleMapsCompatible_Level"}),temp=L.tileLayer(weatherUrl,{tileSize:512,zoomOffset:-1,layer:"temp_new",minZoom:2}),precipitation=L.tileLayer(weatherUrl,{tileSize:512,minZoom:2,zoomOffset:-1,layer:"precipitation_new"}),map=L.map("map",{layers:[dark]}),earthquakeLayer=L.layerGroup(),cityLayer=L.layerGroup(),monumentLayer=L.layerGroup(),monumentMarkers=L.markerClusterGroup(),baseMaps={Light:light,Dark:dark,Satellite:satellite,"Earth At Night":earthAtNight},weatherOverlays={Temperature:temp,Precipitation:precipitation};L.control.layers(baseMaps,weatherOverlays).addTo(map);const getCountryList=()=>{const url="php/getCountryList.php";$.getJSON(url,data=>{$(data).each((key,value)=>{countryList.push(value)})})},getCities=()=>{$.ajax({url:"php/getCityData.php",dataType:"json",type:"POST",data:{countryCode:activeCountry.alpha2Code}}).done(result=>{const marker=L.ExtraMarkers.icon({icon:" fa-location-arrow",markerColor:"#BBDEF0",shape:"square",svg:!0,prefix:"fa"}),capitalMarker=L.ExtraMarkers.icon({icon:" fa-location-arrow",markerColor:"#2C95C9",shape:"star",svg:!0,prefix:"fa"});result.data.forEach(city=>{if("PPLC"==city.fcode){const newMarker=L.marker([city.lat,city.lng],{icon:capitalMarker,type:"city",name:city.name,population:city.population,latitude:city.lat,longitude:city.lng,capital:!0,geonameId:city.geonameId}).addTo(cityLayer);newMarker.on("click",infoPopup)}else{const newMarker=L.marker([city.lat,city.lng],{icon:marker,type:"city",name:city.name,population:city.population,latitude:city.lat,longitude:city.lng,geonameId:city.geonameId}).addTo(cityLayer);newMarker.on("click",infoPopup)}})}).fail(()=>{$("#modalTitle").html("Error"),$("#modalBody").html("Unfortunately there was an error fetching city information. Please try again or select a different country."),$("#infoModal").modal()})},getMonuments=()=>{$.ajax({url:"php/getMonuments.php",dataType:"json",type:"POST",data:{countryCode:activeCountry.alpha2Code}}).done(result=>{const marker=L.ExtraMarkers.icon({icon:"fa-binoculars",markerColor:"#AFD5AA",shape:"penta",svg:!0,prefix:"fa"});result.data.forEach(monument=>{const newMarker=L.marker([monument.lat,monument.lng],{icon:marker,name:monument.name,latitude:monument.lat,longitude:monument.lng,type:"monument",geonameId:monument.geonameId}).addTo(monumentLayer);newMarker.on("click",infoPopup)}),monumentMarkers.addLayer(monumentLayer)}).fail(()=>{$("#modalTitle").html("Error"),$("#modalBody").html("Unfortunately there was an error fetching the monument data. Please try selecting a different country"),$("#infoModal").modal()})},getEarthquakes=(north,south,east,west)=>{earthquakeList=[],$.ajax({url:"php/getEarthquakes.php",dataType:"json",type:"POST",data:{north:north,south:south,east:east,west:west}}).done(result=>{result.data.forEach(quake=>{const newQuake=L.circle([quake.lat,quake.lng],{color:"#dc3545",fillColor:"#9C1C28",fillOpacity:.5,radius:500*Math.pow(quake.magnitude,3)}).addTo(earthquakeLayer);newQuake.bindPopup(`Magnitude: ${quake.magnitude} <br> Date: ${quake.datetime}`)})}).fail(()=>{$("#modalTitle").html("Error"),$("#modalBody").html("Unfortunately there was an error fetching the earthquake data. Please try selecting a different country"),$("#infoModal").modal()})},displayInfo=()=>{if(activeCountry){const{flag:flag,area:area,capital:capital,currencies:currencies,population:population}=activeCountry;$("#flag").attr("src",flag),area?$("#area").html(` ${area}km<sup>2</sup>`):$("#area").html(" Not Found"),capital?$("#capital").html(` ${capital}`):$("#capital").html(" Not Found"),currencies[0].symbol||(currencies[0].symbol=""),currencies[0].name||(currencies[0].symbol="Not Found"),$("#currency").html(` ${currencies[0].name} (${currencies[0].symbol})`),population&&$("#population").html(` ${population}`)}else $("#capital").html("Information for this country is unavailable, please select a different location")},getCountryInfo=countryCode=>{$.ajax({url:"php/getCountryInfo.php",dataType:"json",type:"POST",data:{countryCode:countryCode}}).done(result=>{activeCountry=result.data,displayInfo(),getBoundingBox(),getCities(),getMonuments()})},getCountryFromCoords=(latitude,longitude)=>{$.ajax({url:"php/getCountryFromCoords.php",type:"POST",dataType:"json",data:{lat:latitude,long:longitude}}).done(result=>{const data=result.data[0].components,alpha2Code=data["ISO_3166-1_alpha-2"],alpha3Code=data["ISO_3166-1_alpha-3"];$("#countrySearch").val(data.country),selectNewCountry(alpha3Code,"code")}).fail(()=>{$("#modalTitle").html("Error"),$("#modalBody").html("Unfortunately there was an error finding a country for these coordinates. Please try a different location"),$("#infoModal").modal()})},jumpToUserLocation=()=>{navigator.geolocation?navigator.geolocation.getCurrentPosition(position=>{const{longitude:longitude,latitude:latitude}=position.coords;userCoords={longitude:longitude,latitude:latitude},getCountryFromCoords(latitude,longitude)},error=>{selectNewCountry("GBR","code"),userCoords={longitude:-.118092,latitude:51.509865},$("#modalTitle").html("Location Request Denied"),$("#modalBody").html("This app uses your location to display distances and initiate to your country. Sending you to the UK by default, distances shown will be based on London."),$("#infoModal").modal()}):selectNewCountry("GBR","code")},selectNewCountry=(country,type)=>{const start=Date.now();$.ajax({url:"php/getPolygon.php",type:"POST",dataType:"json",data:{country:country,type:type}}).done(result=>{clearMarkers(earthquakeLayer),clearMarkers(cityLayer),clearMarkers(monumentLayer),monumentMarkers.clearLayers(monumentLayer);const countryCode=result.properties.ISO_A3;myLines&&myLines.clearLayers(),myLines=L.geoJSON(result,{style:{color:"#fd7e14"}}).addTo(map),map.fitBounds(myLines.getBounds()),getCountryInfo(countryCode),console.log(Date.now()-start)}).fail(()=>{console.log("Error in selectNewCountry")})},handleSearchbarChange=(event,ui)=>{const country=ui.item.value;selectNewCountry(country,"name")},getCountryFromClick=event=>{const{lat:lat,lng:lng}=event.latlng;getCountryFromCoords(lat,lng)},getBoundingBox=()=>{const{alpha2Code:alpha2Code}=activeCountry;$.ajax({url:"php/getBoundingBox.php",dataType:"json",type:"POST",data:{countryCode:alpha2Code}}).done(result=>{const{north:north,south:south,east:east,west:west}=result.data[0];getEarthquakes(north,south,east,west)}).fail(()=>{$("#modalTitle").html("Error"),$("#modalBody").html("Unfortunately there was an error fetching the bounding box. Please try selecting a different country"),$("#infoModal").modal()})},clearMarkers=layer=>{0!=Object.keys(layer._layers).length&&layer.clearLayers()};$("#countrySearch").change(()=>{$("#countrySearch").val().length>25?$("#countrySearch").css("font-size","0.7em"):$("#countrySearch").css("font-size","1em")}),$("#countrySearch").click(()=>$("#countrySearch").val("")),$("#countrySearch").autocomplete({source:countryList,select:handleSearchbarChange});const getDistanceFromLatLonInKm=(lat1,lon1,lat2,lon2)=>{const R=6371,dLat=deg2rad(lat2-lat1),dLon=deg2rad(lon2-lon1),a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(deg2rad(lat1))*Math.cos(deg2rad(lat2))*Math.sin(dLon/2)*Math.sin(dLon/2),c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a)),d=R*c;return d},deg2rad=deg=>deg*(Math.PI/180),infoPopup=event=>{const marker=event.target.options,distanceFromUser=getDistanceFromLatLonInKm(marker.latitude,marker.longitude,userCoords.latitude,userCoords.longitude),distanceAsInt=distanceFromUser.toFixed();$.ajax({url:"php/getWikiUrl.php",dataType:"json",type:"POST",data:{geonameId:marker.geonameId}}).then(result=>{const data=result.data,wiki=data.wikipediaURL,title=wiki.split("/")[2];$.ajax({url:"php/getWikiSummary.php",dataType:"json",type:"POST",data:{title:title}}).done(result=>{console.log(marker);const data=Object.values(result.data)[0],extract=data.extract,regex=/\(listen\)/,cleanExtract=extract.replace(regex,"");console.log(distanceFromUser),$("#modalTitle").html(`${marker.name}`),$("#modalBody").html(`${cleanExtract}<br><a href=https://${wiki} target="_blank">Full Wikipedia Article</a>`),$("#modalInfo").html(`<li>Distance from your location: ${distanceAsInt}km</li>`),"city"==marker.type&&$("#modalInfo").append(`Esitmated Population: ${marker.population}`),$("#infoModal").modal()}).fail(()=>{$("#modalTitle").html(`${marker.name}`),$("#modalBody").html("No information is available for this monument."),$("#modalInfo").html(`<li>Distance from your location: ${distanceAsInt}km</li>`),$("#infoModal").modal()})}).fail(()=>{$("#modalTitle").html(`${marker.name}`),$("#modalBody").html("No information is available for this monument."),$("#infoModal").modal(),$("#modalInfo").html(`<li>Distance from your location: ${distanceAsInt}km</li>`)})};$(()=>{jumpToUserLocation();const removeLoader=()=>{activeCountry.name&&($("#preloader").delay(100).fadeOut("slow",()=>{$(this).remove()}),clearInterval(checkInterval))};let checkInterval=setInterval(removeLoader,50);getCountryList(),map.on("click",getCountryFromClick),$("#earthquakeBtn").click(()=>{map.removeLayer(cityLayer),map.removeLayer(monumentLayer),earthquakeLayer.addTo(map)}),$("#cityBtn").click(()=>{map.removeLayer(earthquakeLayer),map.removeLayer(monumentMarkers),cityLayer.addTo(map)}),$("#monumentBtn").click(()=>{map.removeLayer(earthquakeLayer),map.removeLayer(cityLayer),map.addLayer(monumentMarkers)})});